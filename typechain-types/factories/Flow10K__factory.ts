/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Flow10K, Flow10KInterface } from "../Flow10K";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "marketplaceAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "flowContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200111938038062001119833981016040819052620000349162000174565b8383600262000044838262000292565b50600362000053828262000292565b50600080555050600980546001600160a01b039283166001600160a01b03199182161790915560088054939092169216919091179055506200035e9050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000ba57600080fd5b81516001600160401b0380821115620000d757620000d762000092565b604051601f8301601f19908116603f0116810190828211818310171562000102576200010262000092565b816040528381526020925086838588010111156200011f57600080fd5b600091505b8382101562000143578582018301518183018401529082019062000124565b600093810190920192909252949350505050565b80516001600160a01b03811681146200016f57600080fd5b919050565b600080600080608085870312156200018b57600080fd5b84516001600160401b0380821115620001a357600080fd5b620001b188838901620000a8565b95506020870151915080821115620001c857600080fd5b50620001d787828801620000a8565b935050620001e86040860162000157565b9150620001f86060860162000157565b905092959194509250565b600181811c908216806200021857607f821691505b6020821081036200023957634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028d57600081815260208120601f850160051c81016020861015620002685750805b601f850160051c820191505b81811015620002895782815560010162000274565b5050505b505050565b81516001600160401b03811115620002ae57620002ae62000092565b620002c681620002bf845462000203565b846200023f565b602080601f831160018114620002fe5760008415620002e55750858301515b600019600386901b1c1916600185901b17855562000289565b600085815260208120601f198616915b828110156200032f578886015182559484019460019091019084016200030e565b50858210156200034e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610dab806200036e6000396000f3fe6080604052600436106100e85760003560e01c80636352211e1161008a578063abc8c7af11610059578063abc8c7af1461024f578063b88d4fde1461026f578063c87b56dd14610282578063e985e9c5146102a257600080fd5b80636352211e146101da57806370a08231146101fa57806395d89b411461021a578063a22cb4651461022f57600080fd5b8063095ea7b3116100c6578063095ea7b31461017c57806318160ddd1461019157806323b872dd146101b457806342842e0e146101c757600080fd5b806301ffc9a7146100ed57806306fdde0314610122578063081812fc14610144575b600080fd5b3480156100f957600080fd5b5061010d6101083660046109fb565b6102eb565b60405190151581526020015b60405180910390f35b34801561012e57600080fd5b5061013761033d565b6040516101199190610a68565b34801561015057600080fd5b5061016461015f366004610a7b565b6103cf565b6040516001600160a01b039091168152602001610119565b61018f61018a366004610aab565b61040a565b005b34801561019d57600080fd5b50600154600054035b604051908152602001610119565b61018f6101c2366004610ad5565b61041a565b61018f6101d5366004610ad5565b61057f565b3480156101e657600080fd5b506101646101f5366004610a7b565b61059f565b34801561020657600080fd5b506101a6610215366004610b11565b6105aa565b34801561022657600080fd5b506101376105f0565b34801561023b57600080fd5b5061018f61024a366004610b2c565b6105ff565b34801561025b57600080fd5b50600854610164906001600160a01b031681565b61018f61027d366004610b7e565b61066b565b34801561028e57600080fd5b5061013761029d366004610a7b565b6106ac565b3480156102ae57600080fd5b5061010d6102bd366004610c5a565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b03198316148061031c57506380ac58cd60e01b6001600160e01b03198316145b806103375750635b5e139f60e01b6001600160e01b03198316145b92915050565b60606002805461034c90610c8d565b80601f016020809104026020016040519081016040528092919081815260200182805461037890610c8d565b80156103c55780601f1061039a576101008083540402835291602001916103c5565b820191906000526020600020905b8154815290600101906020018083116103a857829003601f168201915b5050505050905090565b60006103da82610734565b6103ee576103ee6333d1c03960e21b610779565b506000908152600660205260409020546001600160a01b031690565b61041682826001610783565b5050565b600061042582610826565b6001600160a01b03948516949091508116841461044b5761044b62a1148160e81b610779565b60008281526006602052604090208054338082146001600160a01b0388169091141761048f5761047b86336102bd565b61048f5761048f632ce44b5f60e11b610779565b801561049a57600082555b6001600160a01b038681166000908152600560205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260046020526040812091909155600160e11b8416900361052c5760018401600081815260046020526040812054900361052a57600054811461052a5760008181526004602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48060000361057657610576633a954ecd60e21b610779565b50505050505050565b61059a8383836040518060200160405280600081525061066b565b505050565b600061033782610826565b60006001600160a01b0382166105ca576105ca6323d3ad8160e21b610779565b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b60606003805461034c90610c8d565b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61067684848461041a565b6001600160a01b0383163b156106a657610692848484846108bc565b6106a6576106a66368d2bf6b60e11b610779565b50505050565b60606106b782610734565b6106cb576106cb630a14c4b560e41b610779565b60006106e260408051602081019091526000815290565b90508051600003610702576040518060200160405280600081525061072d565b8061070c8461099e565b60405160200161071d929190610cc7565b6040516020818303038152906040525b9392505050565b600080548210156107745760005b506000828152600460205260408120549081900361076a5761076383610cf6565b9250610742565b600160e01b161590505b919050565b8060005260046000fd5b600061078e8361059f565b90508180156107a65750336001600160a01b03821614155b156107c9576107b581336102bd565b6107c9576107c96367d9dca160e11b610779565b60008381526006602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b6000818152600460205260408120549081900361089957600054821061085657610856636f96cda160e11b610779565b5b5060001901600081815260046020526040902054801561085757600160e01b811660000361088457919050565b610894636f96cda160e11b610779565b610857565b600160e01b81166000036108ac57919050565b610774636f96cda160e11b610779565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a02906108f1903390899088908890600401610d1b565b6020604051808303816000875af192505050801561092c575060408051601f3d908101601f1916820190925261092991810190610d58565b60015b610981573d80801561095a576040519150601f19603f3d011682016040523d82523d6000602084013e61095f565b606091505b508051600003610979576109796368d2bf6b60e11b610779565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a9004806109b85750819003601f19909101908152919050565b6001600160e01b0319811681146109f857600080fd5b50565b600060208284031215610a0d57600080fd5b813561072d816109e2565b60005b83811015610a33578181015183820152602001610a1b565b50506000910152565b60008151808452610a54816020860160208601610a18565b601f01601f19169290920160200192915050565b60208152600061072d6020830184610a3c565b600060208284031215610a8d57600080fd5b5035919050565b80356001600160a01b038116811461077457600080fd5b60008060408385031215610abe57600080fd5b610ac783610a94565b946020939093013593505050565b600080600060608486031215610aea57600080fd5b610af384610a94565b9250610b0160208501610a94565b9150604084013590509250925092565b600060208284031215610b2357600080fd5b61072d82610a94565b60008060408385031215610b3f57600080fd5b610b4883610a94565b915060208301358015158114610b5d57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610b9457600080fd5b610b9d85610a94565b9350610bab60208601610a94565b925060408501359150606085013567ffffffffffffffff80821115610bcf57600080fd5b818701915087601f830112610be357600080fd5b813581811115610bf557610bf5610b68565b604051601f8201601f19908116603f01168101908382118183101715610c1d57610c1d610b68565b816040528281528a6020848701011115610c3657600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610c6d57600080fd5b610c7683610a94565b9150610c8460208401610a94565b90509250929050565b600181811c90821680610ca157607f821691505b602082108103610cc157634e487b7160e01b600052602260045260246000fd5b50919050565b60008351610cd9818460208801610a18565b835190830190610ced818360208801610a18565b01949350505050565b600081610d1357634e487b7160e01b600052601160045260246000fd5b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610d4e90830184610a3c565b9695505050505050565b600060208284031215610d6a57600080fd5b815161072d816109e256fea2646970667358221220c7e79126702450b848fc06390a0f8bbf9e598f63a7826bea07bf1a9b9446d66e64736f6c63430008110033";

type Flow10KConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Flow10KConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Flow10K__factory extends ContractFactory {
  constructor(...args: Flow10KConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Flow10K";
  }

  deploy(
    name: string,
    symbol: string,
    marketplaceAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Flow10K> {
    return super.deploy(
      name,
      symbol,
      marketplaceAddress,
      flowContract,
      overrides || {}
    ) as Promise<Flow10K>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    marketplaceAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      marketplaceAddress,
      flowContract,
      overrides || {}
    );
  }
  attach(address: string): Flow10K {
    return super.attach(address) as Flow10K;
  }
  connect(signer: Signer): Flow10K__factory {
    return super.connect(signer) as Flow10K__factory;
  }
  static readonly contractName: "Flow10K";
  public readonly contractName: "Flow10K";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Flow10KInterface {
    return new utils.Interface(_abi) as Flow10KInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Flow10K {
    return new Contract(address, _abi, signerOrProvider) as Flow10K;
  }
}
