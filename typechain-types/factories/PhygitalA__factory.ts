/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PhygitalA, PhygitalAInterface } from "../PhygitalA";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tradeHubAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessControlAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "domain",
        type: "string",
      },
      {
        internalType: "string",
        name: "_version",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_royaltyBPS",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reciepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "PhygitalAAssetCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "PhygitalAAssetDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "renter",
        type: "address",
      },
    ],
    name: "RentalInfo",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
    ],
    name: "UpdateUser",
    type: "event",
  },
  {
    inputs: [],
    name: "SIGNATURE_VERSION",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SIGNING_DOMAIN",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "accessMasterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "amountRequired",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burnNFT",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    name: "nfcCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "nfcId",
    outputs: [
      {
        internalType: "bytes16",
        name: "",
        type: "bytes16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PhygitalA.LazyNFTVoucher",
        name: "voucher",
        type: "tuple",
      },
    ],
    name: "recover",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "uri",
            type: "string",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PhygitalA.LazyNFTVoucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes16",
        name: "_nfcId",
        type: "bytes16",
      },
    ],
    name: "registerAssetId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_timeInHours",
        type: "uint256",
      },
    ],
    name: "rent",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rentables",
    outputs: [
      {
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "hourlyRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "pricePerHour",
        type: "uint256",
      },
    ],
    name: "setRentInfo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
    ],
    name: "setUser",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "userExpires",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "userOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x610160604052600a805460ff191660011790553480156200001f57600080fd5b50604051620030bb380380620030bb833981016040819052620000429162000364565b84848a8a60046200005483826200050d565b5060056200006382826200050d565b5050600160025550815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060c052610120525050601480546001600160a01b038a81166001600160a01b031992831617909255600c8054928c16929091169190911790555050610140839052600b6200014082826200050d565b506200014d33836200017d565b5050600d80546001600160a01b0319166001600160a01b03959095169490941790935550620005d9945050505050565b6127106001600160601b0382161115620001f15760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b60648201526084015b60405180910390fd5b6001600160a01b038216620002495760405162461bcd60e51b815260206004820152601960248201527f455243323938313a20696e76616c6964207265636569766572000000000000006044820152606401620001e8565b604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b90910217600055565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620002aa57600080fd5b81516001600160401b0380821115620002c757620002c762000282565b604051601f8301601f19908116603f01168101908282118183101715620002f257620002f262000282565b816040528381526020925086838588010111156200030f57600080fd5b600091505b8382101562000333578582018301518183018401529082019062000314565b600093810190920192909252949350505050565b80516001600160a01b03811681146200035f57600080fd5b919050565b60008060008060008060008060006101208a8c0312156200038457600080fd5b89516001600160401b03808211156200039c57600080fd5b620003aa8d838e0162000298565b9a5060208c0151915080821115620003c157600080fd5b620003cf8d838e0162000298565b9950620003df60408d0162000347565b9850620003ef60608d0162000347565b975060808c01519150808211156200040657600080fd5b620004148d838e0162000298565b965060a08c01519150808211156200042b57600080fd5b620004398d838e0162000298565b955060c08c0151945060e08c015193506101008c01519150808211156200045f57600080fd5b506200046e8c828d0162000298565b9150509295985092959850929598565b600181811c908216806200049357607f821691505b602082108103620004b457634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200050857600081815260208120601f850160051c81016020861015620004e35750805b601f850160051c820191505b818110156200050457828155600101620004ef565b5050505b505050565b81516001600160401b0381111562000529576200052962000282565b62000541816200053a84546200047e565b84620004ba565b602080601f831160018114620005795760008415620005605750858301515b600019600386901b1c1916600185901b17855562000504565b600085815260208120601f198616915b82811015620005aa5788860151825594840194600190910190840162000589565b5085821015620005c95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e051610100516101205161014051612a806200063b600039600081816106d7015261119b01526000611ee301526000611f3201526000611f0d01526000611e6601526000611e9001526000611eba0152612a806000f3fe6080604052600436106102045760003560e01c8063783a112b11610118578063a5cc0328116100a0578063c87b56dd1161006f578063c87b56dd146106a5578063d5abeb01146106c5578063e030565e146106f9578063e3faad9414610719578063e985e9c51461072e57600080fd5b8063a5cc032814610632578063b88d4fde14610652578063ba91caae14610665578063c2f1f14a1461068557600080fd5b80639874cd97116100e75780639874cd9714610523578063a0712d68146105b5578063a22cb465146105dd578063a4157296146105fd578063a4b110521461061257600080fd5b8063783a112b1461048e5780638fc88c48146104a157806391295516146104de57806395d89b411461050e57600080fd5b80632a55205a1161019b57806354fd4d501161016a57806354fd4d50146103e257806360f453eb1461040e5780636352211e1461042e578063655bc8db1461044e57806370a082311461046e57600080fd5b80632a55205a1461032757806333c21d2c1461036657806342842e0e146103af57806342966c68146103c257600080fd5b80630aa7c854116101d75780630aa7c854146102ad57806318160ddd146102cd57806323b872dd146102f45780632890e0d71461030757600080fd5b806301ffc9a71461020957806306fdde031461023e578063081812fc14610260578063095ea7b314610298575b600080fd5b34801561021557600080fd5b5061022961022436600461230e565b61074e565b60405190151581526020015b60405180910390f35b34801561024a57600080fd5b5061025361079f565b604051610235919061237b565b34801561026c57600080fd5b5061028061027b36600461238e565b610831565b6040516001600160a01b039091168152602001610235565b6102ab6102a63660046123bc565b61086c565b005b3480156102b957600080fd5b50600d54610280906001600160a01b031681565b3480156102d957600080fd5b5060035460025403600019015b604051908152602001610235565b6102ab6103023660046123e8565b61087c565b34801561031357600080fd5b506102ab61032236600461238e565b6109eb565b34801561033357600080fd5b50610347610342366004612429565b610ac9565b604080516001600160a01b039093168352602083019190915201610235565b34801561037257600080fd5b5061039661038136600461238e565b60126020526000908152604090205460801b81565b6040516001600160801b03199091168152602001610235565b6102ab6103bd3660046123e8565b610b77565b3480156103ce57600080fd5b506102ab6103dd36600461238e565b610b97565b3480156103ee57600080fd5b50600a546103fc9060ff1681565b60405160ff9091168152602001610235565b34801561041a57600080fd5b50610280610429366004612463565b610ba5565b34801561043a57600080fd5b5061028061044936600461238e565b610c75565b34801561045a57600080fd5b506102ab6104693660046124a5565b610c80565b34801561047a57600080fd5b506102e66104893660046124cc565b610d31565b6102ab61049c366004612429565b610d76565b3480156104ad57600080fd5b506102e66104bc36600461238e565b600090815260106020526040902054600160a81b90046001600160401b031690565b3480156104ea57600080fd5b506102296104f9366004612501565b60136020526000908152604090205460ff1681565b34801561051a57600080fd5b506102536110a4565b34801561052f57600080fd5b5061057d61053e36600461238e565b6010602052600090815260409020805460019091015460ff82169161010081046001600160a01b031691600160a81b9091046001600160401b03169084565b6040805194151585526001600160a01b0390931660208501526001600160401b03909116918301919091526060820152608001610235565b6105c86105c336600461238e565b6110b3565b60408051928352602083019190915201610235565b3480156105e957600080fd5b506102ab6105f836600461251c565b611319565b34801561060957600080fd5b50610253611385565b34801561061e57600080fd5b50600c54610280906001600160a01b031681565b34801561063e57600080fd5b506102ab61064d366004612555565b611413565b6102ab6106603660046125c1565b6115a4565b34801561067157600080fd5b506102e6610680366004612429565b6115e5565b34801561069157600080fd5b506102806106a036600461238e565b611609565b3480156106b157600080fd5b506102536106c036600461238e565b61165d565b3480156106d157600080fd5b506102e67f000000000000000000000000000000000000000000000000000000000000000081565b34801561070557600080fd5b506102ab6107143660046126a0565b6116d7565b34801561072557600080fd5b50610253611837565b34801561073a57600080fd5b506102296107493660046126ee565b611844565b6000636ad56fd360e11b6001600160e01b031983160161077057506001919050565b6314bdb52960e21b6001600160e01b031983160161079057506001919050565b61079982611872565b92915050565b6060600480546107ae9061271c565b80601f01602080910402602001604051908101604052809291908181526020018280546107da9061271c565b80156108275780601f106107fc57610100808354040283529160200191610827565b820191906000526020600020905b81548152906001019060200180831161080a57829003601f168201915b5050505050905090565b600061083c826118c0565b610850576108506333d1c03960e21b61190c565b506000908152600860205260409020546001600160a01b031690565b61087882826001611916565b5050565b6000610887826119b9565b6001600160a01b0394851694909150811684146108ad576108ad62a1148160e81b61190c565b600082815260086020526040902080546108d98187335b6001600160a01b039081169116811491141790565b6108fb576108e78633611844565b6108fb576108fb632ce44b5f60e11b61190c565b801561090657600082555b6001600160a01b038681166000908152600760205260408082208054600019019055918716808252919020805460010190554260a01b17600160e11b17600085815260066020526040812091909155600160e11b84169003610998576001840160008181526006602052604081205490036109965760025481146109965760008181526006602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4806000036109e2576109e2633a954ecd60e21b61190c565b50505050505050565b60006109f682610c75565b905033610a0283610c75565b6001600160a01b03161480610a1c5750610a1c8133611844565b610a6d5760405162461bcd60e51b815260206004820181905260248201527f506879676974616c413a204e6f74204f776e6572204f7220417070726f76656460448201526064015b60405180910390fd5b610a78826001611a5a565b600082815260016020526040812055817f2a5fd0bc4df8bf54012cb36761df3287ea7e3380367b791f6f6ad0506b500a0a336040516001600160a01b03909116815260200160405180910390a25050565b60008281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610b3e5750604080518082019091526000546001600160a01b0381168252600160a01b90046001600160601b031660208201525b602081015160009061271090610b5d906001600160601b031687612766565b610b67919061277d565b91519350909150505b9250929050565b610b92838383604051806020016040528060008152506115a4565b505050565b610ba2816001611a5a565b50565b600080610c1e7f6a50cd13df4d49c839384eb15944b5713af5a276ddb78e79557d1798dbca09fa610bd6858061279f565b604051610be49291906127e5565b604051908190038120610c039291602001918252602082015260400190565b60405160208183030381529060405280519060200120611b9c565b90506000610c6d82610c33602087018761279f565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611bea92505050565b949350505050565b6000610799826119b9565b6000610c8b84610c75565b90506001600160a01b038116331480610ca95750610ca98133611844565b610cc55760405162461bcd60e51b8152600401610a64906127f5565b600084815260106020908152604091829020805460ff19168615159081178255600190910185905582518781529182015290810183905233907fa9dcc06084f66afbdc1841a28e84400fcbf607131220fdcf404c8502f3c032039060600160405180910390a250505050565b60006001600160a01b038216610d5157610d516323d3ad8160e21b61190c565b506001600160a01b03166000908152600760205260409020546001600160401b031690565b610d7f826118c0565b610dd65760405162461bcd60e51b815260206004820152602260248201527f5369676e61747572655365726965733a20496e76616c69646520546f6b656e20604482015261125960f21b6064820152608401610a64565b60008281526010602052604090205460ff16610e3e5760405162461bcd60e51b815260206004820152602160248201527f506879676974616c413a204e6f7420617661696c61626c6520666f722072656e6044820152601d60fa1b6064820152608401610a64565b6000610e4983611609565b6001600160a01b031614610ea95760405162461bcd60e51b815260206004820152602160248201527f506879676974616c413a204e465420416c7265616479205375627363726962656044820152601960fa1b6064820152608401610a64565b60008111610f0b5760405162461bcd60e51b815260206004820152602960248201527f506879676974616c413a2054696d652063616e2774206265206c65737320746860448201526830b71018903437bab960b91b6064820152608401610a64565b6110e0811115610f715760405162461bcd60e51b815260206004820152602b60248201527f506879676974616c413a2054696d652063616e2774206265206d6f726520746860448201526a616e2036206d6f6e74687360a81b6064820152608401610a64565b6000610f7d83836115e5565b905080341015610fcf5760405162461bcd60e51b815260206004820152601d60248201527f506879676974616c413a20496e73756666696369656e742046756e64730000006044820152606401610a64565b610fe333610fdc85610c75565b8534611c0e565b60008381526010602052604090208054610100600160a81b031916610100330217815561101283610e10612766565b61101c904261283a565b81546001600160401b0391909116600160a81b0267ffffffffffffffff60a81b1990911617815561104a3390565b8154604051600160a81b9091046001600160401b031681526001600160a01b03919091169085907f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe9060200160405180910390a350505050565b6060600580546107ae9061271c565b60145460009081906001600160a01b031663efd46065336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561110e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611132919061284d565b6111885760405162461bcd60e51b815260206004820152602160248201527f506879676974616c413a2055736572206973206e6f7420617574686f72697a656044820152601960fa1b6064820152608401610a64565b60006111976002546000190190565b90507f0000000000000000000000000000000000000000000000000000000000000000846111c86002546000190190565b6111d2919061283a565b111561122f5760405162461bcd60e51b815260206004820152602660248201527f506879676974616c413a20457863656564696e67206d617820746f6b656e20736044820152657570706c792160d01b6064820152608401610a64565b6112393385611d0a565b600c54611250906001600160a01b03166001611319565b60145460408051633955348d60e21b815290516000926001600160a01b03169163e554d2349160048083019260209291908290030181865afa15801561129a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112be919061286a565b90506112cc33828734611c0e565b337f328ff68d0e66694e405c9f8fc906a346b345aa1f87ec216eaa82f2c654d0d34a6112fb6002546000190190565b60408051918252602082018990520160405180910390a25093915050565b3360008181526009602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600f80546113929061271c565b80601f01602080910402602001604051908101604052809291908181526020018280546113be9061271c565b801561140b5780601f106113e05761010080835404028352916020019161140b565b820191906000526020600020905b8154815290600101906020018083116113ee57829003601f168201915b505050505081565b6001600160801b0319811660009081526013602052604090205460ff16156114875760405162461bcd60e51b815260206004820152602160248201527f506879676974616c413a204974277320616c72656164792072656769737465726044820152601960fa1b6064820152608401610a64565b6014546001600160a01b031663efd460656114a185610ba5565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156114e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611509919061284d565b6115555760405162461bcd60e51b815260206004820152601d60248201527f506879676974616c413a20496e76616c6964205369676e6174757265210000006044820152606401610a64565b61155f838061279f565b6000848152601160205260409020916115799190836128d5565b5060009182526012602052604090912080546001600160801b03191660809290921c91909117905550565b6115af84848461087c565b6001600160a01b0383163b156115df576115cb84848484611d24565b6115df576115df6368d2bf6b60e11b61190c565b50505050565b600082815260106020526040812060010154611602908390612766565b9392505050565b60008181526010602052604081205442600160a81b9091046001600160401b031610611650575060009081526010602052604090205461010090046001600160a01b031690565b506000919050565b919050565b6060611668826118c0565b61167c5761167c630a14c4b560e41b61190c565b6000611686611e06565b905080516000036116a65760405180602001604052806000815250611602565b806116b084611e15565b6040516020016116c1929190612994565b6040516020818303038152906040529392505050565b60006116e284610c75565b90506001600160a01b03811633148061170057506117008133611844565b61171c5760405162461bcd60e51b8152600401610a64906127f5565b600061172785611609565b6001600160a01b03161461178b5760405162461bcd60e51b815260206004820152602560248201527f506879676974616c413a204974656d20697320616c72656164792073756273636044820152641c9a58995960da1b6064820152608401610a64565b60008481526010602052604090208054610100600160a81b0319166101006001600160a01b038616021781556117ca6001600160401b0384164261283a565b815467ffffffffffffffff60a81b1916600160a81b6001600160401b039283160217825560405190841681526001600160a01b0385169086907f4e06b4e7000e659094299b3533b47b6aa8ad048e95e872d23d1f4ee55af89cfe9060200160405180910390a35050505050565b600e80546113929061271c565b6001600160a01b03918216600090815260096020908152604080832093909416825291909152205460ff1690565b60006301ffc9a760e01b6001600160e01b0319831614806118a357506380ac58cd60e01b6001600160e01b03198316145b806107995750506001600160e01b031916635b5e139f60e01b1490565b600081600111611658576002548210156116585760005b50600082815260066020526040812054908190036118ff576118f8836129c3565b92506118d7565b600160e01b161592915050565b8060005260046000fd5b600061192183610c75565b90508180156119395750336001600160a01b03821614155b1561195c576119488133611844565b61195c5761195c6367d9dca160e11b61190c565b60008381526008602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b600081600111611a4a575060008181526006602052604081205490819003611a375760025482106119f4576119f4636f96cda160e11b61190c565b5b506000190160008181526006602052604090205480156119f557600160e01b8116600003611a2257919050565b611a32636f96cda160e11b61190c565b6119f5565b600160e01b8116600003611a4a57919050565b611658636f96cda160e11b61190c565b6000611a65836119b9565b905080600080611a8386600090815260086020526040902080549091565b915091508415611aba57611a988184336108c4565b611aba57611aa68333611844565b611aba57611aba632ce44b5f60e11b61190c565b8015611ac557600082555b6001600160a01b038316600081815260076020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b17600087815260066020526040812091909155600160e11b85169003611b5357600186016000818152600660205260408120549003611b51576002548114611b515760008181526006602052604090208590555b505b60405186906000906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060038054600101905550505050565b6000610799611ba9611e59565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611bf98585611f80565b91509150611c0681611fc2565b509392505050565b6000836001600160a01b03168260405160006040518083038185875af1925050503d8060008114611c5b576040519150601f19603f3d011682016040523d82523d6000602084013e611c60565b606091505b5050905080611cb15760405162461bcd60e51b815260206004820152601a60248201527f506879676974616c413a205472616e73666572206661696c65640000000000006044820152606401610a64565b604080516001600160a01b03808816825286166020820152908101849052606081018390527faeadc2c673108f922a1042ef404b73ae1af992c9ae54249a4a7d13ef21ef2c189060800160405180910390a15050505050565b61087882826040518060200160405280600081525061210c565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611d599033908990889088906004016129da565b6020604051808303816000875af1925050508015611d94575060408051601f3d908101601f19168201909252611d9191810190612a17565b60015b611de9573d808015611dc2576040519150601f19603f3d011682016040523d82523d6000602084013e611dc7565b606091505b508051600003611de157611de16368d2bf6b60e11b61190c565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6060600b80546107ae9061271c565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480611e2f5750819003601f19909101908152919050565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015611eb257507f000000000000000000000000000000000000000000000000000000000000000046145b15611edc57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604103611fb65760208301516040840151606085015160001a611faa87828585612175565b94509450505050610b70565b50600090506002610b70565b6000816004811115611fd657611fd6612a34565b03611fde5750565b6001816004811115611ff257611ff2612a34565b0361203f5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610a64565b600281600481111561205357612053612a34565b036120a05760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610a64565b60038160048111156120b4576120b4612a34565b03610ba25760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610a64565b6121168383612239565b6001600160a01b0383163b15610b92576002548281035b6121406000868380600101945086611d24565b612154576121546368d2bf6b60e11b61190c565b81811061212d57816002541461216e5761216e600061190c565b5050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156121ac5750600090506003612230565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015612200573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661222957600060019250925050612230565b9150600090505b94509492505050565b60025460008290036122555761225563b562e8dd60e01b61190c565b60008181526006602090815260408083206001600160a01b0387164260a01b6001881460e11b178117909155808452600790925282208054680100000000000000018602019055908190036122b3576122b3622e076360e81b61190c565b818301825b808360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a48181600101915081036122b8575060025550505050565b6001600160e01b031981168114610ba257600080fd5b60006020828403121561232057600080fd5b8135611602816122f8565b60005b8381101561234657818101518382015260200161232e565b50506000910152565b6000815180845261236781602086016020860161232b565b601f01601f19169290920160200192915050565b602081526000611602602083018461234f565b6000602082840312156123a057600080fd5b5035919050565b6001600160a01b0381168114610ba257600080fd5b600080604083850312156123cf57600080fd5b82356123da816123a7565b946020939093013593505050565b6000806000606084860312156123fd57600080fd5b8335612408816123a7565b92506020840135612418816123a7565b929592945050506040919091013590565b6000806040838503121561243c57600080fd5b50508035926020909101359150565b60006040828403121561245d57600080fd5b50919050565b60006020828403121561247557600080fd5b81356001600160401b0381111561248b57600080fd5b610c6d8482850161244b565b8015158114610ba257600080fd5b6000806000606084860312156124ba57600080fd5b83359250602084013561241881612497565b6000602082840312156124de57600080fd5b8135611602816123a7565b80356001600160801b03198116811461165857600080fd5b60006020828403121561251357600080fd5b611602826124e9565b6000806040838503121561252f57600080fd5b823561253a816123a7565b9150602083013561254a81612497565b809150509250929050565b60008060006060848603121561256a57600080fd5b83356001600160401b0381111561258057600080fd5b61258c8682870161244b565b935050602084013591506125a2604085016124e9565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156125d757600080fd5b84356125e2816123a7565b935060208501356125f2816123a7565b92506040850135915060608501356001600160401b038082111561261557600080fd5b818701915087601f83011261262957600080fd5b81358181111561263b5761263b6125ab565b604051601f8201601f19908116603f01168101908382118183101715612663576126636125ab565b816040528281528a602084870101111561267c57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806000606084860312156126b557600080fd5b8335925060208401356126c7816123a7565b915060408401356001600160401b03811681146126e357600080fd5b809150509250925092565b6000806040838503121561270157600080fd5b823561270c816123a7565b9150602083013561254a816123a7565b600181811c9082168061273057607f821691505b60208210810361245d57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761079957610799612750565b60008261279a57634e487b7160e01b600052601260045260246000fd5b500490565b6000808335601e198436030181126127b657600080fd5b8301803591506001600160401b038211156127d057600080fd5b602001915036819003821315610b7057600080fd5b8183823760009101908152919050565b60208082526025908201527f506879676974616c413a2043616c6c6572206973206e6f7420746f6b656e206f60408201526403bb732b9160dd1b606082015260800190565b8082018082111561079957610799612750565b60006020828403121561285f57600080fd5b815161160281612497565b60006020828403121561287c57600080fd5b8151611602816123a7565b601f821115610b9257600081815260208120601f850160051c810160208610156128ae5750805b601f850160051c820191505b818110156128cd578281556001016128ba565b505050505050565b6001600160401b038311156128ec576128ec6125ab565b612900836128fa835461271c565b83612887565b6000601f841160018114612934576000851561291c5750838201355b600019600387901b1c1916600186901b17835561216e565b600083815260209020601f19861690835b828110156129655786850135825560209485019460019092019101612945565b50868210156129825760001960f88860031b161c19848701351681555b505060018560011b0183555050505050565b600083516129a681846020880161232b565b8351908301906129ba81836020880161232b565b01949350505050565b6000816129d2576129d2612750565b506000190190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090612a0d9083018461234f565b9695505050505050565b600060208284031215612a2957600080fd5b8151611602816122f8565b634e487b7160e01b600052602160045260246000fdfea264697066735822122045f515bcf441a687847f46afc73ee959e8d022f98d842d3effaed9653f8396cc64736f6c63430008110033";

type PhygitalAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhygitalAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhygitalA__factory extends ContractFactory {
  constructor(...args: PhygitalAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PhygitalA";
  }

  deploy(
    name: string,
    symbol: string,
    tradeHubAddress: string,
    accessControlAddress: string,
    domain: string,
    _version: string,
    _maxSupply: BigNumberish,
    _royaltyBPS: BigNumberish,
    _baseUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhygitalA> {
    return super.deploy(
      name,
      symbol,
      tradeHubAddress,
      accessControlAddress,
      domain,
      _version,
      _maxSupply,
      _royaltyBPS,
      _baseUri,
      overrides || {}
    ) as Promise<PhygitalA>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tradeHubAddress: string,
    accessControlAddress: string,
    domain: string,
    _version: string,
    _maxSupply: BigNumberish,
    _royaltyBPS: BigNumberish,
    _baseUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tradeHubAddress,
      accessControlAddress,
      domain,
      _version,
      _maxSupply,
      _royaltyBPS,
      _baseUri,
      overrides || {}
    );
  }
  attach(address: string): PhygitalA {
    return super.attach(address) as PhygitalA;
  }
  connect(signer: Signer): PhygitalA__factory {
    return super.connect(signer) as PhygitalA__factory;
  }
  static readonly contractName: "PhygitalA";
  public readonly contractName: "PhygitalA";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhygitalAInterface {
    return new utils.Interface(_abi) as PhygitalAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhygitalA {
    return new Contract(address, _abi, signerOrProvider) as PhygitalA;
  }
}
