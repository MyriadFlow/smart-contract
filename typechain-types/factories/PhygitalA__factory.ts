/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PhygitalA, PhygitalAInterface } from "../PhygitalA";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "tradeHubAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "accessControlAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_tokenAddr",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "contractDetails",
        type: "uint256[]",
      },
      {
        internalType: "string",
        name: "_baseUri",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "ERC2981InvalidDefaultRoyalty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC2981InvalidDefaultRoyaltyReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "numerator",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "denominator",
        type: "uint256",
      },
    ],
    name: "ERC2981InvalidTokenRoyalty",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC2981InvalidTokenRoyaltyReceiver",
    type: "error",
  },
  {
    inputs: [],
    name: "MintERC2309QuantityExceedsLimit",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnershipNotInitializedForExtraData",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "uuid",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "AssetRegistered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "fromTokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toTokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "ConsecutiveTransfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "reciepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "currentIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
    ],
    name: "PhygitalAAssetCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "PhygitalAAssetDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedMaxMint",
        type: "uint256",
      },
    ],
    name: "UpdateAssetMaxMint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "updatedPrice",
        type: "uint256",
      },
    ],
    name: "UpdateAssetPrice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "enum PhygitalA.ItemStatus",
        name: "assetStatus",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "time",
        type: "uint256",
      },
    ],
    name: "UpdateAssetStatus",
    type: "event",
  },
  {
    inputs: [],
    name: "accessMasterAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burnAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "calculateRequiredPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "reciever",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "delegateMint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxMint",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "nftPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "phygitalAssets",
    outputs: [
      {
        internalType: "uint256",
        name: "registerTime",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "phygitalId",
        type: "bytes",
      },
      {
        internalType: "enum PhygitalA.ItemStatus",
        name: "status",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "phygitalIdCheck",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_phygitalID",
        type: "bytes",
      },
    ],
    name: "registerAssetId",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rentables",
    outputs: [
      {
        internalType: "bool",
        name: "isRentable",
        type: "bool",
      },
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint64",
        name: "expires",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "hourlyRate",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "enum PhygitalA.ItemStatus",
        name: "_status",
        type: "uint8",
      },
    ],
    name: "setItemStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint16",
        name: "amount",
        type: "uint16",
      },
    ],
    name: "setMaxMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "setNFTPrice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tradeHub",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801562000010575f80fd5b5060405162002d9f38038062002d9f8339810160408190526200003391620003fc565b868660046200004383826200056e565b5060056200005282826200056e565b5060016002555050601380546001600160a01b038087166001600160a01b031992831617909255600c8054888416620100000262010000600160b01b031990911617905560148054928616929091169190911790558151600414620000fe5760405162461bcd60e51b815260206004820152601860248201527f506879676974616c3a20496e76616c696420496e70757421000000000000000060448201526064015b60405180910390fd5b815f815181106200011357620001136200063a565b6020026020010151600b81905550816001815181106200013757620001376200063a565b60209081029190910101516080526200017433836002815181106200016057620001606200063a565b6020026020010151620001e760201b60201c565b816003815181106200018a576200018a6200063a565b6020908102919091010151600c805461ffff191661ffff909216919091179055600a620001b882826200056e565b5050600d80546001600160a01b0319166001600160a01b039490941693909317909255506200064e9350505050565b6127106001600160601b0382168110156200022857604051636f483d0960e01b81526001600160601b038316600482015260248101829052604401620000f5565b6001600160a01b0383166200025357604051635b6cc80560e11b81525f6004820152602401620000f5565b50604080518082019091526001600160a01b039092168083526001600160601b039091166020909201829052600160a01b909102175f55565b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f191681016001600160401b0381118282101715620002cb57620002cb6200028c565b604052919050565b5f82601f830112620002e3575f80fd5b81516001600160401b03811115620002ff57620002ff6200028c565b602062000315601f8301601f19168201620002a0565b828152858284870101111562000329575f80fd5b5f5b83811015620003485785810183015182820184015282016200032b565b505f928101909101919091529392505050565b80516001600160a01b038116811462000372575f80fd5b919050565b5f82601f83011262000387575f80fd5b815160206001600160401b03821115620003a557620003a56200028c565b8160051b620003b6828201620002a0565b9283528481018201928281019087851115620003d0575f80fd5b83870192505b84831015620003f157825182529183019190830190620003d6565b979650505050505050565b5f805f805f805f60e0888a03121562000413575f80fd5b87516001600160401b03808211156200042a575f80fd5b620004388b838c01620002d3565b985060208a01519150808211156200044e575f80fd5b6200045c8b838c01620002d3565b97506200046c60408b016200035b565b96506200047c60608b016200035b565b95506200048c60808b016200035b565b945060a08a0151915080821115620004a2575f80fd5b620004b08b838c0162000377565b935060c08a0151915080821115620004c6575f80fd5b50620004d58a828b01620002d3565b91505092959891949750929550565b600181811c90821680620004f957607f821691505b6020821081036200051857634e487b7160e01b5f52602260045260245ffd5b50919050565b601f8211156200056957805f5260205f20601f840160051c81016020851015620005455750805b601f840160051c820191505b8181101562000566575f815560010162000551565b50505b505050565b81516001600160401b038111156200058a576200058a6200028c565b620005a2816200059b8454620004e4565b846200051e565b602080601f831160018114620005d8575f8415620005c05750858301515b5f19600386901b1c1916600185901b17855562000632565b5f85815260208120601f198616915b828110156200060857888601518255948401946001909101908401620005e7565b50858210156200062657878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b634e487b7160e01b5f52603260045260245ffd5b60805161272a620006755f395f8181610696015281816108750152611145015261272a5ff3fe6080604052600436106101f1575f3560e01c80637db7942711610108578063a22cb4651161009d578063c87b56dd1161006d578063c87b56dd14610666578063d5abeb0114610685578063e461c9b6146106b8578063e985e9c5146106d7578063f0f7d05d146106f6575f80fd5b8063a22cb465146105f0578063a4b110521461060f578063b88d4fde14610634578063c2962bc714610647575f80fd5b80638f08d44d116100d85780638f08d44d1461050c57806395d89b411461052b5780639874cd971461053f578063a0712d68146105d1575f80fd5b80637db794271461046657806381530b6814610494578063882f08f3146104b35780638c38431e146104ed575f80fd5b806318160ddd1161018957806342966c681161015957806342966c68146103b657806354fd4d50146103d55780636352211e146103fb57806370a082311461041a5780637501f74114610439575f80fd5b806318160ddd1461033757806323b872dd146103525780632a55205a1461036557806342842e0e146103a3575f80fd5b8063081812fc116101c4578063081812fc146102b7578063095ea7b3146102ee5780630aa7c854146103035780630d39fc8114610322575f80fd5b80630103c92b146101f557806301ffc9a714610233578063049d01531461026257806306fdde0314610296575b5f80fd5b348015610200575f80fd5b5061022061020f366004611f4b565b60126020525f908152604090205481565b6040519081526020015b60405180910390f35b34801561023e575f80fd5b5061025261024d366004611f7b565b610715565b604051901515815260200161022a565b34801561026d575f80fd5b5061028161027c366004611f96565b610745565b6040805192835260208301919091520161022a565b3480156102a1575f80fd5b506102aa61093d565b60405161022a919061200d565b3480156102c2575f80fd5b506102d66102d136600461201f565b6109cd565b6040516001600160a01b03909116815260200161022a565b6103016102fc366004611f96565b610a06565b005b34801561030e575f80fd5b50600d546102d6906001600160a01b031681565b34801561032d575f80fd5b50610220600b5481565b348015610342575f80fd5b50600354600254035f1901610220565b610301610360366004612036565b610a16565b348015610370575f80fd5b5061038461037f366004612074565b610b7b565b604080516001600160a01b03909316835260208301919091520161022a565b6103016103b1366004612036565b610c24565b3480156103c1575f80fd5b506103016103d036600461201f565b610c43565b3480156103e0575f80fd5b506103e9600181565b60405160ff909116815260200161022a565b348015610406575f80fd5b506102d661041536600461201f565b610c51565b348015610425575f80fd5b50610220610434366004611f4b565b610c5b565b348015610444575f80fd5b50600c546104539061ffff1681565b60405161ffff909116815260200161022a565b348015610471575f80fd5b5061048561048036600461201f565b610c9f565b60405161022a939291906120c8565b34801561049f575f80fd5b506103016104ae36600461201f565b610d4a565b3480156104be575f80fd5b506102526104cd36600461218c565b805160208183018101805160118252928201919093012091525460ff1681565b3480156104f8575f80fd5b506103016105073660046121be565b610e20565b348015610517575f80fd5b5061030161052636600461201f565b610f43565b348015610536575f80fd5b506102aa611089565b34801561054a575f80fd5b5061059861055936600461201f565b600e6020525f90815260409020805460019091015460ff82169161010081046001600160a01b031691600160a81b90910467ffffffffffffffff169084565b6040805194151585526001600160a01b03909316602085015267ffffffffffffffff90911691830191909152606082015260800161022a565b3480156105dc575f80fd5b506102816105eb36600461201f565b611098565b3480156105fb575f80fd5b5061030161060a3660046121fc565b611382565b34801561061a575f80fd5b50600c546102d6906201000090046001600160a01b031681565b610301610642366004612228565b6113ed565b348015610652575f80fd5b50610301610661366004612290565b61142e565b348015610671575f80fd5b506102aa61068036600461201f565b611516565b348015610690575f80fd5b506102207f000000000000000000000000000000000000000000000000000000000000000081565b3480156106c3575f80fd5b506103016106d23660046122b1565b61158e565b3480156106e2575f80fd5b506102526106f13660046122f5565b6117ff565b348015610701575f80fd5b5061022061071036600461201f565b61182c565b5f636ad56fd360e11b6001600160e01b031983160161073657506001919050565b61073f8261183b565b92915050565b6013545f9081906001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa15801561079d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107c19190612321565b6107e65760405162461bcd60e51b81526004016107dd9061233c565b60405180910390fd5b5f6107f36002545f190190565b600c5490915061ffff168411158061080f5750600c5461ffff16155b6108735760405162461bcd60e51b815260206004820152602f60248201527f506879676974616c3a205175616e746974792073686f756c64206265206c657360448201526e1cc81d1a185b881b585e081b5a5b9d608a1b60648201526084016107dd565b7f0000000000000000000000000000000000000000000000000000000000000000846108a16002545f190190565b6108ab9190612391565b11156108c95760405162461bcd60e51b81526004016107dd906123a4565b6108d38585611888565b600c546108f0906201000090046001600160a01b03166001611382565b337f328ff68d0e66694e405c9f8fc906a346b345aa1f87ec216eaa82f2c654d0d34a61091e6002545f190190565b60408051918252602082018890520160405180910390a2949293505050565b60606004805461094c906123ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610978906123ea565b80156109c35780601f1061099a576101008083540402835291602001916109c3565b820191905f5260205f20905b8154815290600101906020018083116109a657829003601f168201915b5050505050905090565b5f6109d7826118a1565b6109eb576109eb6333d1c03960e21b6118ec565b505f908152600860205260409020546001600160a01b031690565b610a12828260016118f4565b5050565b5f610a2082611995565b6001600160a01b039485169490915081168414610a4657610a4662a1148160e81b6118ec565b5f8281526008602052604090208054610a718187335b6001600160a01b039081169116811491141790565b610a9357610a7f86336117ff565b610a9357610a93632ce44b5f60e11b6118ec565b8015610a9d575f82555b6001600160a01b038681165f9081526007602052604080822080545f19019055918716808252919020805460010190554260a01b17600160e11b175f85815260066020526040812091909155600160e11b84169003610b2a57600184015f818152600660205260408120549003610b28576002548114610b28575f8181526006602052604090208490555b505b6001600160a01b0385168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4805f03610b7257610b72633a954ecd60e21b6118ec565b50505050505050565b5f8281526001602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b0316928201929092528291610bee5750604080518082019091525f546001600160a01b0381168252600160a01b90046001600160601b031660208201525b60208101515f9061271090610c0c906001600160601b031687612422565b610c169190612439565b915196919550909350505050565b610c3e83838360405180602001604052805f8152506113ed565b505050565b610c4e816001611a30565b50565b5f61073f82611995565b5f6001600160a01b038216610c7a57610c7a6323d3ad8160e21b6118ec565b506001600160a01b03165f9081526007602052604090205467ffffffffffffffff1690565b60106020525f908152604090208054600182018054919291610cc0906123ea565b80601f0160208091040260200160405190810160405280929190818152602001828054610cec906123ea565b8015610d375780601f10610d0e57610100808354040283529160200191610d37565b820191905f5260205f20905b815481529060010190602001808311610d1a57829003601f168201915b5050506002909301549192505060ff1683565b6013546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610d9e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610dc29190612321565b610dde5760405162461bcd60e51b81526004016107dd9061233c565b600b81905560408051338152602081018390527fe4fe79a855bb953d57c217fb96867cc30beed4bf0ce6c2b1e7d2731ce74982ec91015b60405180910390a150565b8133610e2b82610c51565b6001600160a01b03161480610eb357506013546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610e8f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610eb39190612321565b610ecf5760405162461bcd60e51b81526004016107dd90612458565b5f838152601060205260409020600201805483919060ff19166001836004811115610efc57610efc612094565b02179055507f07c2cea5a1fbb990e885b52e8c51ce865a718fb8676e7169289a1c137d3d8b3733848442604051610f36949392919061249f565b60405180910390a1505050565b33610f4d82610c51565b6001600160a01b031614610faf5760405162461bcd60e51b815260206004820152602360248201527f506879676974616c413a2055736572206973206e6f74206173736574206f776e60448201526265722160e81b60648201526084016107dd565b5f8181526010602052604081206002015460ff166004811115610fd457610fd4612094565b1461102f5760405162461bcd60e51b815260206004820152602560248201527f506879676974616c413a2041737365742063616e6e6f742062652064657374726044820152646f7965642160d81b60648201526084016107dd565b61103a816001611a30565b5f81815260016020526040812055807f2a5fd0bc4df8bf54012cb36761df3287ea7e3380367b791f6f6ad0506b500a0a336040516001600160a01b03909116815260200160405180910390a250565b60606005805461094c906123ea565b5f805f6110a76002545f190190565b335f90815260126020526040812054919250906110c5908690612391565b600c5490915061ffff161561114357600c5461ffff168111156111435760405162461bcd60e51b815260206004820152603060248201527f506879676974616c413a205175616e746974792073686f756c64206265206c6560448201526f1cdcc81d1a185b881b585e081b5a5b9d60821b60648201526084016107dd565b7f0000000000000000000000000000000000000000000000000000000000000000856111716002545f190190565b61117b9190612391565b11156111995760405162461bcd60e51b81526004016107dd906123a4565b6111a28561182c565b6014546001600160a01b03166370a08231336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156111f6573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061121a91906124d2565b10156112685760405162461bcd60e51b815260206004820152601c60248201527f506879676974616c413a204e6f7420656e6f7567682066756e6473210000000060448201526064016107dd565b60135460408051633955348d60e21b815290515f926001600160a01b03169163e554d2349160048083019260209291908290030181865afa1580156112af573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112d391906124e9565b90506112e933826112e38961182c565b5f611b69565b335f9081526012602052604081208054889290611307908490612391565b9091555061131790503387611888565b600c54611334906201000090046001600160a01b03166001611382565b337f328ff68d0e66694e405c9f8fc906a346b345aa1f87ec216eaa82f2c654d0d34a6113626002545f190190565b60408051918252602082018a90520160405180910390a250909492505050565b335f8181526009602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6113f8848484610a16565b6001600160a01b0383163b156114285761141484848484611ce4565b611428576114286368d2bf6b60e11b6118ec565b50505050565b6013546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015611482573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114a69190612321565b6114c25760405162461bcd60e51b81526004016107dd9061233c565b600c805461ffff191661ffff83161790557f681fea8fe1457e6e31ea5cec63ed1685758afb352bc523a85590601a4b3382f833604080516001600160a01b03909216825261ffff8416602083015201610e15565b6060611521826118a1565b61153557611535630a14c4b560e41b6118ec565b5f61153e611dc3565b905080515f0361155c5760405180602001604052805f815250611587565b8061156684611dd2565b604051602001611577929190612504565b6040516020818303038152906040525b9392505050565b813361159982610c51565b6001600160a01b0316148061162157506013546001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa1580156115fd573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116219190612321565b61163d5760405162461bcd60e51b81526004016107dd90612458565b611646836118a1565b6116925760405162461bcd60e51b815260206004820181905260248201527f506879676974616c413a20546f6b656e20646f6573206e6f742065786973747360448201526064016107dd565b6011826040516116a29190612532565b9081526040519081900360200190205460ff161580156116cd57505f83815260106020526040902054155b6117275760405162461bcd60e51b815260206004820152602560248201527f506879676974616c413a204e46432054616720697320616c72656164792073746044820152646f7265642160d81b60648201526084016107dd565b6040805160608101825242815260208082018581526004838501525f878152601090925292902081518155915190919060018201906117669082612591565b50604082015160028201805460ff1916600183600481111561178a5761178a612094565b021790555090505060016011836040516117a49190612532565b908152604051908190036020019020805491151560ff199092169190911790557f35fbbba3856c29d63b934b93a99ab192c3c6b71eacad55451212d003f94eeaad6117ec3390565b848442604051610f369493929190612651565b6001600160a01b039182165f90815260096020908152604080832093909416825291909152205460ff1690565b5f600b548261073f9190612422565b5f6301ffc9a760e01b6001600160e01b03198316148061186b57506380ac58cd60e01b6001600160e01b03198316145b8061073f5750506001600160e01b031916635b5e139f60e01b1490565b610a12828260405180602001604052805f815250611e15565b5f816001116118e7576002548210156118e7575f5b505f82815260066020526040812054908190036118dd576118d683612688565b92506118b6565b600160e01b161590505b919050565b805f5260045ffd5b5f6118fe83610c51565b90508180156119165750336001600160a01b03821614155b156119395761192581336117ff565b611939576119396367d9dca160e11b6118ec565b5f8381526008602052604080822080546001600160a01b0319166001600160a01b0388811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b5f81600111611a2057505f8181526006602052604081205490819003611a0e5760025482106119ce576119ce636f96cda160e11b6118ec565b5b505f19015f8181526006602052604090205480156119cf57600160e01b81165f036119f957919050565b611a09636f96cda160e11b6118ec565b6119cf565b600160e01b81165f03611a2057919050565b6118e7636f96cda160e11b6118ec565b5f611a3a83611995565b9050805f80611a56865f90815260086020526040902080549091565b915091508415611a8d57611a6b818433610a5c565b611a8d57611a7983336117ff565b611a8d57611a8d632ce44b5f60e11b6118ec565b8015611a97575f82555b6001600160a01b0383165f81815260076020526040902080546fffffffffffffffffffffffffffffffff0190554260a01b17600360e01b175f87815260066020526040812091909155600160e11b85169003611b2157600186015f818152600660205260408120549003611b1f576002548114611b1f575f8181526006602052604090208590555b505b60405186905f906001600160a01b038616907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060038054600101905550505050565b5f8115611bc6576040516001600160a01b0385169084905f81818185875af1925050503d805f8114611bb6576040519150601f19603f3d011682016040523d82523d5f602084013e611bbb565b606091505b505080915050611c45565b6014546040516323b872dd60e01b81526001600160a01b038781166004830152868116602483015260448201869052909116906323b872dd906064016020604051808303815f875af1158015611c1e573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190611c429190612321565b90505b80611c925760405162461bcd60e51b815260206004820152601a60248201527f506879676974616c413a205472616e73666572206661696c656400000000000060448201526064016107dd565b604080516001600160a01b038088168252861660208201529081018490527f4ed2986a2cde8f90dd7d10ce44efb8d683b5e58ff9a6ffdc2d83dbbacee764379060600160405180910390a15050505050565b604051630a85bd0160e11b81525f906001600160a01b0385169063150b7a0290611d1890339089908890889060040161269d565b6020604051808303815f875af1925050508015611d52575060408051601f3d908101601f19168201909252611d4f918101906126d9565b60015b611da5573d808015611d7f576040519150601f19603f3d011682016040523d82523d5f602084013e611d84565b606091505b5080515f03611d9d57611d9d6368d2bf6b60e11b6118ec565b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b6060600a805461094c906123ea565b606060a06040510180604052602081039150505f815280825b600183039250600a81066030018353600a900480611deb5750819003601f19909101908152919050565b611e1f8383611e7c565b6001600160a01b0383163b15610c3e576002548281035b611e485f868380600101945086611ce4565b611e5c57611e5c6368d2bf6b60e11b6118ec565b818110611e36578160025414611e7557611e755f6118ec565b5050505050565b6002545f829003611e9757611e9763b562e8dd60e01b6118ec565b5f8181526006602090815260408083206001600160a01b0387164260a01b6001881460e11b17811790915580845260079092528220805468010000000000000001860201905590819003611ef457611ef4622e076360e81b6118ec565b818301825b80835f7fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a4818160010191508103611ef9575060025550505050565b6001600160a01b0381168114610c4e575f80fd5b5f60208284031215611f5b575f80fd5b813561158781611f37565b6001600160e01b031981168114610c4e575f80fd5b5f60208284031215611f8b575f80fd5b813561158781611f66565b5f8060408385031215611fa7575f80fd5b8235611fb281611f37565b946020939093013593505050565b5f5b83811015611fda578181015183820152602001611fc2565b50505f910152565b5f8151808452611ff9816020860160208601611fc0565b601f01601f19169290920160200192915050565b602081525f6115876020830184611fe2565b5f6020828403121561202f575f80fd5b5035919050565b5f805f60608486031215612048575f80fd5b833561205381611f37565b9250602084013561206381611f37565b929592945050506040919091013590565b5f8060408385031215612085575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52602160045260245ffd5b600581106120c457634e487b7160e01b5f52602160045260245ffd5b9052565b838152606060208201525f6120e06060830185611fe2565b9050611dbb60408301846120a8565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112612112575f80fd5b813567ffffffffffffffff8082111561212d5761212d6120ef565b604051601f8301601f19908116603f01168101908282118183101715612155576121556120ef565b8160405283815286602085880101111561216d575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f6020828403121561219c575f80fd5b813567ffffffffffffffff8111156121b2575f80fd5b611dbb84828501612103565b5f80604083850312156121cf575f80fd5b823591506020830135600581106121e4575f80fd5b809150509250929050565b8015158114610c4e575f80fd5b5f806040838503121561220d575f80fd5b823561221881611f37565b915060208301356121e4816121ef565b5f805f806080858703121561223b575f80fd5b843561224681611f37565b9350602085013561225681611f37565b925060408501359150606085013567ffffffffffffffff811115612278575f80fd5b61228487828801612103565b91505092959194509250565b5f602082840312156122a0575f80fd5b813561ffff81168114611587575f80fd5b5f80604083850312156122c2575f80fd5b82359150602083013567ffffffffffffffff8111156122df575f80fd5b6122eb85828601612103565b9150509250929050565b5f8060408385031215612306575f80fd5b823561231181611f37565b915060208301356121e481611f37565b5f60208284031215612331575f80fd5b8151611587816121ef565b60208082526021908201527f506879676974616c413a2055736572206973206e6f7420617574686f72697a656040820152601960fa1b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561073f5761073f61237d565b60208082526026908201527f506879676974616c413a20457863656564696e67206d617820746f6b656e20736040820152657570706c792160d01b606082015260800190565b600181811c908216806123fe57607f821691505b60208210810361241c57634e487b7160e01b5f52602260045260245ffd5b50919050565b808202811582820484141761073f5761073f61237d565b5f8261245357634e487b7160e01b5f52601260045260245ffd5b500490565b60208082526027908201527f506879676974616c413a55736572206973206e6f74206f776e6572206f72206f6040820152663832b930ba37b960c91b606082015260800190565b6001600160a01b038516815260208101849052608081016124c360408301856120a8565b82606083015295945050505050565b5f602082840312156124e2575f80fd5b5051919050565b5f602082840312156124f9575f80fd5b815161158781611f37565b5f8351612515818460208801611fc0565b835190830190612529818360208801611fc0565b01949350505050565b5f8251612543818460208701611fc0565b9190910192915050565b601f821115610c3e57805f5260205f20601f840160051c810160208510156125725750805b601f840160051c820191505b81811015611e75575f815560010161257e565b815167ffffffffffffffff8111156125ab576125ab6120ef565b6125bf816125b984546123ea565b8461254d565b602080601f8311600181146125f2575f84156125db5750858301515b5f19600386901b1c1916600185901b178555612649565b5f85815260208120601f198616915b8281101561262057888601518255948401946001909101908401612601565b508582101561263d57878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b60018060a01b0385168152836020820152608060408201525f6126776080830185611fe2565b905082606083015295945050505050565b5f816126965761269661237d565b505f190190565b6001600160a01b03858116825284166020820152604081018390526080606082018190525f906126cf90830184611fe2565b9695505050505050565b5f602082840312156126e9575f80fd5b815161158781611f6656fea26469706673582212207838ded33867b7d436fffcb3bacc6d853b8b4b0b2656dbba9e0f9c2f86edb00764736f6c63430008180033";

type PhygitalAConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PhygitalAConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PhygitalA__factory extends ContractFactory {
  constructor(...args: PhygitalAConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "PhygitalA";
  }

  deploy(
    name: string,
    symbol: string,
    tradeHubAddress: string,
    accessControlAddress: string,
    _tokenAddr: string,
    contractDetails: BigNumberish[],
    _baseUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PhygitalA> {
    return super.deploy(
      name,
      symbol,
      tradeHubAddress,
      accessControlAddress,
      _tokenAddr,
      contractDetails,
      _baseUri,
      overrides || {}
    ) as Promise<PhygitalA>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    tradeHubAddress: string,
    accessControlAddress: string,
    _tokenAddr: string,
    contractDetails: BigNumberish[],
    _baseUri: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      tradeHubAddress,
      accessControlAddress,
      _tokenAddr,
      contractDetails,
      _baseUri,
      overrides || {}
    );
  }
  attach(address: string): PhygitalA {
    return super.attach(address) as PhygitalA;
  }
  connect(signer: Signer): PhygitalA__factory {
    return super.connect(signer) as PhygitalA__factory;
  }
  static readonly contractName: "PhygitalA";
  public readonly contractName: "PhygitalA";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PhygitalAInterface {
    return new utils.Interface(_abi) as PhygitalAInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PhygitalA {
    return new Contract(address, _abi, signerOrProvider) as PhygitalA;
  }
}
