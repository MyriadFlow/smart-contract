/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StoreFrontEdition,
  StoreFrontEditionInterface,
} from "../StoreFrontEdition";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "marketplaceAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "flowContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "metaDataURI",
        type: "string",
      },
    ],
    name: "AssetCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "ownerOrApproved",
        type: "address",
      },
    ],
    name: "AssetDestroyed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "uint96",
        name: "royaltyPercentBasisPoint",
        type: "uint96",
      },
    ],
    name: "createAsset",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        internalType: "string",
        name: "metadataURI",
        type: "string",
      },
      {
        internalType: "uint96",
        name: "royaltyPercentBasisPoint",
        type: "uint96",
      },
    ],
    name: "delegateAssetCreation",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "destroyAsset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "marketplace",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "tokenOfOwnerByIndex",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200249238038062002492833981016040819052620000349162000170565b838360006200004483826200028e565b5060016200005382826200028e565b5050600f80546001600160a01b039384166001600160a01b031991821617909155600e8054949093169316929092179055506200035a915050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000b657600080fd5b81516001600160401b0380821115620000d357620000d36200008e565b604051601f8301601f19908116603f01168101908282118183101715620000fe57620000fe6200008e565b816040528381526020925086838588010111156200011b57600080fd5b600091505b838210156200013f578582018301518183018401529082019062000120565b600093810190920192909252949350505050565b80516001600160a01b03811681146200016b57600080fd5b919050565b600080600080608085870312156200018757600080fd5b84516001600160401b03808211156200019f57600080fd5b620001ad88838901620000a4565b95506020870151915080821115620001c457600080fd5b50620001d387828801620000a4565b935050620001e46040860162000153565b9150620001f46060860162000153565b905092959194509250565b600181811c908216806200021457607f821691505b6020821081036200023557634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200028957600081815260208120601f850160051c81016020861015620002645750805b601f850160051c820191505b81811015620002855782815560010162000270565b5050505b505050565b81516001600160401b03811115620002aa57620002aa6200008e565b620002c281620002bb8454620001ff565b846200023b565b602080601f831160018114620002fa5760008415620002e15750858301515b600019600386901b1c1916600185901b17855562000285565b600085815260208120601f198616915b828110156200032b578886015182559484019460019091019084016200030a565b50858210156200034a5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612128806200036a6000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c80634f6ccce7116100b857806395d89b411161007c57806395d89b41146102a8578063a22cb465146102b0578063abc8c7af146102c3578063b88d4fde146102d6578063c87b56dd146102e9578063e985e9c5146102fc57600080fd5b80634f6ccce7146102495780636352211e1461025c57806370a082311461026f57806383c6f9a9146102825780638c275eec1461029557600080fd5b806323b872dd116100ff57806323b872dd146101cb5780632a55205a146101de5780632f745c591461021057806342842e0e14610223578063474c15201461023657600080fd5b806301ffc9a71461013c57806306fdde0314610164578063081812fc14610179578063095ea7b3146101a457806318160ddd146101b9575b600080fd5b61014f61014a36600461194a565b610338565b60405190151581526020015b60405180910390f35b61016c610349565b60405161015b91906119b4565b61018c6101873660046119c7565b6103db565b6040516001600160a01b03909116815260200161015b565b6101b76101b23660046119fc565b610402565b005b6008545b60405190815260200161015b565b6101b76101d9366004611a26565b61051c565b6101f16101ec366004611a62565b61054e565b604080516001600160a01b03909316835260208301919091520161015b565b6101bd61021e3660046119fc565b6105fa565b6101b7610231366004611a26565b610690565b6101b76102443660046119c7565b6106ab565b6101bd6102573660046119c7565b610781565b61018c61026a3660046119c7565b610814565b6101bd61027d366004611a84565b610874565b6101bd610290366004611b62565b6108fa565b6101bd6102a3366004611bb0565b6109c2565b61016c610b68565b6101b76102be366004611c1c565b610b77565b600e5461018c906001600160a01b031681565b6101b76102e4366004611c53565b610b86565b61016c6102f73660046119c7565b610bbe565b61014f61030a366004611ccf565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b600061034382610c94565b92915050565b60606000805461035890611cf9565b80601f016020809104026020016040519081016040528092919081815260200182805461038490611cf9565b80156103d15780601f106103a6576101008083540402835291602001916103d1565b820191906000526020600020905b8154815290600101906020018083116103b457829003601f168201915b5050505050905090565b60006103e682610cb9565b506000908152600460205260409020546001600160a01b031690565b600061040d82610814565b9050806001600160a01b0316836001600160a01b03160361047f5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061049b575061049b813361030a565b61050d5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610476565b6105178383610d18565b505050565b610527335b82610d86565b6105435760405162461bcd60e51b815260040161047690611d33565b610517838383610e05565b6000828152600b602090815260408083208151808301909252546001600160a01b038116808352600160a01b9091046001600160601b03169282019290925282916105c3575060408051808201909152600a546001600160a01b0381168252600160a01b90046001600160601b031660208201525b6020810151600090612710906105e2906001600160601b031687611d96565b6105ec9190611dad565b915196919550909350505050565b600061060583610874565b82106106675760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201526a74206f6620626f756e647360a81b6064820152608401610476565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61051783838360405180602001604052806000815250610b86565b6106b433610521565b6107265760405162461bcd60e51b815260206004820152603b60248201527f53746f726566726f6e74436f6c6c656374696f6e3a2043616c6c65722069732060448201527f6e6f7420746f6b656e206f776e6572206f7220617070726f76656400000000006064820152608401610476565b61072f81610f76565b807fc3a3686eed3b315ba4f3b1a0bf88b63a4525e3f27314495ba7dc0a40a6c4cd90336040516001600160a01b03909116815260200160405180910390a26000908152600b6020526040812055565b50565b600061078c60085490565b82106107ef5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201526b7574206f6620626f756e647360a01b6064820152608401610476565b6008828154811061080257610802611dcf565b90600052602060002001549050919050565b6000818152600260205260408120546001600160a01b0316806103435760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610476565b60006001600160a01b0382166108de5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610476565b506001600160a01b031660009081526003602052604090205490565b600061090a600c80546001019055565b6000610915600c5490565b90506109213382611019565b61092b8185611033565b6103e8836001600160601b031611156109565760405162461bcd60e51b815260040161047690611de5565b61096181338561107f565b600e54610978906001600160a01b03166001610b77565b336001600160a01b03167f49b4e4c6879cdc85b51d8c3b572252aaa7842edb863810854acb6d2ed420d96282866040516109b3929190611e39565b60405180910390a29392505050565b600f546000906001600160a01b0316636d70f7ae336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401602060405180830381865afa158015610a1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3f9190611e52565b610aa15760405162461bcd60e51b815260206004820152602d60248201527f53746f726546726f6e744d61726b6574706c6163653a2055736572206973206e60448201526c1bdd08185d5d1a1bdc9a5e9959609a1b6064820152608401610476565b610aaf600c80546001019055565b6000610aba600c5490565b9050610ac68582611019565b610ad08185611033565b6103e8836001600160601b03161115610afb5760405162461bcd60e51b815260040161047690611de5565b610b0681868561107f565b600e54610b1d906001600160a01b03166001610b77565b846001600160a01b03167f49b4e4c6879cdc85b51d8c3b572252aaa7842edb863810854acb6d2ed420d9628286604051610b58929190611e39565b60405180910390a2949350505050565b60606001805461035890611cf9565b610b8233838361118d565b5050565b610b903383610d86565b610bac5760405162461bcd60e51b815260040161047690611d33565b610bb88484848461125b565b50505050565b6000818152600260205260409020546060906001600160a01b0316610bf55760405162461bcd60e51b815260040161047690611e6f565b6000828152600d602052604081208054610c0e90611cf9565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3a90611cf9565b8015610c875780601f10610c5c57610100808354040283529160200191610c87565b820191906000526020600020905b815481529060010190602001808311610c6a57829003601f168201915b5093979650505050505050565b60006001600160e01b0319821663152a902d60e11b148061034357506103438261128e565b6000818152600260205260409020546001600160a01b031661077e5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610476565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610d4d82610814565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610d9283610814565b9050806001600160a01b0316846001600160a01b03161480610dd957506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610dfd5750836001600160a01b0316610df2846103db565b6001600160a01b0316145b949350505050565b826001600160a01b0316610e1882610814565b6001600160a01b031614610e3e5760405162461bcd60e51b815260040161047690611eb7565b6001600160a01b038216610ea05760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610476565b610ead83838360016112b3565b826001600160a01b0316610ec082610814565b6001600160a01b031614610ee65760405162461bcd60e51b815260040161047690611eb7565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6000610f8182610814565b9050610f918160008460016112b3565b610f9a82610814565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b610b828282604051806020016040528060008152506112bf565b6000828152600260205260409020546001600160a01b03166110675760405162461bcd60e51b815260040161047690611e6f565b6000828152600d602052604090206105178282611f4a565b6127106001600160601b03821611156110ed5760405162461bcd60e51b815260206004820152602a60248201527f455243323938313a20726f79616c7479206665652077696c6c206578636565646044820152692073616c65507269636560b01b6064820152608401610476565b6001600160a01b0382166111435760405162461bcd60e51b815260206004820152601b60248201527f455243323938313a20496e76616c696420706172616d657465727300000000006044820152606401610476565b6040805180820182526001600160a01b0393841681526001600160601b0392831660208083019182526000968752600b90529190942093519051909116600160a01b029116179055565b816001600160a01b0316836001600160a01b0316036111ee5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610476565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611266848484610e05565b611272848484846112f2565b610bb85760405162461bcd60e51b81526004016104769061200a565b60006001600160e01b0319821663780e9d6360e01b14806103435750610343826113f3565b610bb884848484611443565b6112c98383611583565b6112d660008484846112f2565b6105175760405162461bcd60e51b81526004016104769061200a565b60006001600160a01b0384163b156113e857604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061133690339089908890889060040161205c565b6020604051808303816000875af1925050508015611371575060408051601f3d908101601f1916820190925261136e91810190612099565b60015b6113ce573d80801561139f576040519150601f19603f3d011682016040523d82523d6000602084013e6113a4565b606091505b5080516000036113c65760405162461bcd60e51b81526004016104769061200a565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610dfd565b506001949350505050565b60006001600160e01b031982166380ac58cd60e01b148061142457506001600160e01b03198216635b5e139f60e01b145b8061034357506301ffc9a760e01b6001600160e01b0319831614610343565b61144f8484848461171c565b60018111156114be5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e7365637574697665207472604482015274185b9cd9995c9cc81b9bdd081cdd5c1c1bdc9d1959605a1b6064820152608401610476565b816001600160a01b03851661151a5761151581600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61153d565b836001600160a01b0316856001600160a01b03161461153d5761153d85826117a4565b6001600160a01b0384166115595761155481611841565b61157c565b846001600160a01b0316846001600160a01b03161461157c5761157c84826118f0565b5050505050565b6001600160a01b0382166115d95760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610476565b6000818152600260205260409020546001600160a01b03161561163e5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610476565b61164c6000838360016112b3565b6000818152600260205260409020546001600160a01b0316156116b15760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610476565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001811115610bb8576001600160a01b03841615611762576001600160a01b0384166000908152600360205260408120805483929061175c9084906120b6565b90915550505b6001600160a01b03831615610bb8576001600160a01b038316600090815260036020526040812080548392906117999084906120c9565b909155505050505050565b600060016117b184610874565b6117bb91906120b6565b60008381526007602052604090205490915080821461180e576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611853906001906120b6565b6000838152600960205260408120546008805493945090928490811061187b5761187b611dcf565b90600052602060002001549050806008838154811061189c5761189c611dcf565b60009182526020808320909101929092558281526009909152604080822084905585825281205560088054806118d4576118d46120dc565b6001900381819060005260206000200160009055905550505050565b60006118fb83610874565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b6001600160e01b03198116811461077e57600080fd5b60006020828403121561195c57600080fd5b813561196781611934565b9392505050565b6000815180845260005b8181101561199457602081850181015186830182015201611978565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611967602083018461196e565b6000602082840312156119d957600080fd5b5035919050565b80356001600160a01b03811681146119f757600080fd5b919050565b60008060408385031215611a0f57600080fd5b611a18836119e0565b946020939093013593505050565b600080600060608486031215611a3b57600080fd5b611a44846119e0565b9250611a52602085016119e0565b9150604084013590509250925092565b60008060408385031215611a7557600080fd5b50508035926020909101359150565b600060208284031215611a9657600080fd5b611967826119e0565b634e487b7160e01b600052604160045260246000fd5b600067ffffffffffffffff80841115611ad057611ad0611a9f565b604051601f8501601f19908116603f01168101908282118183101715611af857611af8611a9f565b81604052809350858152868686011115611b1157600080fd5b858560208301376000602087830101525050509392505050565b600082601f830112611b3c57600080fd5b61196783833560208501611ab5565b80356001600160601b03811681146119f757600080fd5b60008060408385031215611b7557600080fd5b823567ffffffffffffffff811115611b8c57600080fd5b611b9885828601611b2b565b925050611ba760208401611b4b565b90509250929050565b600080600060608486031215611bc557600080fd5b611bce846119e0565b9250602084013567ffffffffffffffff811115611bea57600080fd5b611bf686828701611b2b565b925050611c0560408501611b4b565b90509250925092565b801515811461077e57600080fd5b60008060408385031215611c2f57600080fd5b611c38836119e0565b91506020830135611c4881611c0e565b809150509250929050565b60008060008060808587031215611c6957600080fd5b611c72856119e0565b9350611c80602086016119e0565b925060408501359150606085013567ffffffffffffffff811115611ca357600080fd5b8501601f81018713611cb457600080fd5b611cc387823560208401611ab5565b91505092959194509250565b60008060408385031215611ce257600080fd5b611ceb836119e0565b9150611ba7602084016119e0565b600181811c90821680611d0d57607f821691505b602082108103611d2d57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761034357610343611d80565b600082611dca57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b60208082526034908201527f53746f726566726f6e74436f6c6c656374696f6e3a20526f79616c74792063616040820152736e2774206265206d6f7265207468616e2031302560601b606082015260800190565b828152604060208201526000610dfd604083018461196e565b600060208284031215611e6457600080fd5b815161196781611c0e565b60208082526028908201527f53746f726566726f6e74436f6c6c656374696f6e3a204e6f6e2d4578697374656040820152671b9d08105cdcd95d60c21b606082015260800190565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b601f82111561051757600081815260208120601f850160051c81016020861015611f235750805b601f850160051c820191505b81811015611f4257828155600101611f2f565b505050505050565b815167ffffffffffffffff811115611f6457611f64611a9f565b611f7881611f728454611cf9565b84611efc565b602080601f831160018114611fad5760008415611f955750858301515b600019600386901b1c1916600185901b178555611f42565b600085815260208120601f198616915b82811015611fdc57888601518255948401946001909101908401611fbd565b5085821015611ffa5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061208f9083018461196e565b9695505050505050565b6000602082840312156120ab57600080fd5b815161196781611934565b8181038181111561034357610343611d80565b8082018082111561034357610343611d80565b634e487b7160e01b600052603160045260246000fdfea2646970667358221220db41e954530c1bbb1cca14e16f262943efc2b2c038b47a0ea7ad950c02d781a364736f6c63430008110033";

type StoreFrontEditionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StoreFrontEditionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StoreFrontEdition__factory extends ContractFactory {
  constructor(...args: StoreFrontEditionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StoreFrontEdition";
  }

  deploy(
    name: string,
    symbol: string,
    marketplaceAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StoreFrontEdition> {
    return super.deploy(
      name,
      symbol,
      marketplaceAddress,
      flowContract,
      overrides || {}
    ) as Promise<StoreFrontEdition>;
  }
  getDeployTransaction(
    name: string,
    symbol: string,
    marketplaceAddress: string,
    flowContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      marketplaceAddress,
      flowContract,
      overrides || {}
    );
  }
  attach(address: string): StoreFrontEdition {
    return super.attach(address) as StoreFrontEdition;
  }
  connect(signer: Signer): StoreFrontEdition__factory {
    return super.connect(signer) as StoreFrontEdition__factory;
  }
  static readonly contractName: "StoreFrontEdition";
  public readonly contractName: "StoreFrontEdition";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StoreFrontEditionInterface {
    return new utils.Interface(_abi) as StoreFrontEditionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StoreFrontEdition {
    return new Contract(address, _abi, signerOrProvider) as StoreFrontEdition;
  }
}
