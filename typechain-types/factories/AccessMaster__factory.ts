/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AccessMaster, AccessMasterInterface } from "../AccessMaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "storefrontAdmin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOW_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOW_CREATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "FLOW_OPERATOR_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getPayoutAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isCreator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isOperator",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_payoutAddress",
        type: "address",
      },
    ],
    name: "setPayoutAddress",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "updateName",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    name: "updateSymbol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c0604052600f60809081526e26bc9020b1b1b2b9b9a6b0b9ba32b960891b60a05260029062000030908262000697565b50604080518082019091526002815261414d60f01b602082015260039062000059908262000697565b503480156200006757600080fd5b506040516200198d3803806200198d8339810160408190526200008a9162000763565b620000a56000805160206200194d83398151915233620001a6565b620000c06000805160206200194d83398151915280620001b6565b620000ea6000805160206200196d8339815191526000805160206200194d833981519152620001b6565b620001146000805160206200192d8339815191526000805160206200196d833981519152620001b6565b6200012f6000805160206200196d8339815191523362000201565b6200014a6000805160206200194d8339815191528262000201565b620001656000805160206200196d8339815191528262000201565b620001806000805160206200192d8339815191528262000201565b600480546001600160a01b0319166001600160a01b0392909216919091179055620008d8565b620001b282826200022f565b5050565b600082815260208190526040808220600101805490849055905190918391839186917fbd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff9190a4505050565b6000828152602081905260409020600101546200021e816200026d565b6200022a83836200022f565b505050565b6200024682826200027c60201b620006941760201c565b60008281526001602090815260409091206200022a918390620007186200031c821b17901c565b6200027981336200033c565b50565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001b2576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620002d83390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b600062000333836001600160a01b038416620003d5565b90505b92915050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16620001b2576200037b816200042760201b6200072d1760201c565b620003918360206200073f6200043a821b17811c565b604051602001620003a4929190620007b4565b60408051601f198184030181529082905262461bcd60e51b8252620003cc916004016200082d565b60405180910390fd5b60008181526001830160205260408120546200041e5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915562000336565b50600062000336565b6060620003366001600160a01b03831660145b606060006200044b83600262000878565b6200045890600262000892565b6001600160401b03811115620004725762000472620005f3565b6040519080825280601f01601f1916602001820160405280156200049d576020820181803683370190505b509050600360fc1b81600081518110620004bb57620004bb620008a8565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110620004ed57620004ed620008a8565b60200101906001600160f81b031916908160001a90535060006200051384600262000878565b6200052090600162000892565b90505b6001811115620005a2576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110620005585762000558620008a8565b1a60f81b828281518110620005715762000571620008a8565b60200101906001600160f81b031916908160001a90535060049490941c936200059a81620008be565b905062000523565b508315620003335760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401620003cc565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200061e57607f821691505b6020821081036200063f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200022a57600081815260208120601f850160051c810160208610156200066e5750805b601f850160051c820191505b818110156200068f578281556001016200067a565b505050505050565b81516001600160401b03811115620006b357620006b3620005f3565b620006cb81620006c4845462000609565b8462000645565b602080601f831160018114620007035760008415620006ea5750858301515b600019600386901b1c1916600185901b1785556200068f565b600085815260208120601f198616915b82811015620007345788860151825594840194600190910190840162000713565b5085821015620007535787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200077657600080fd5b81516001600160a01b03811681146200033357600080fd5b60005b83811015620007ab57818101518382015260200162000791565b50506000910152565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351620007ee8160178501602088016200078e565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351620008218160288401602088016200078e565b01602801949350505050565b60208152600082518060208401526200084e8160408501602087016200078e565b601f01601f19169190910160400192915050565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141762000336576200033662000862565b8082018082111562000336576200033662000862565b634e487b7160e01b600052603260045260246000fd5b600081620008d057620008d062000862565b506000190190565b61104580620008e86000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c80637b75083c116100b85780639ea5722b1161007c5780639ea5722b146102d8578063a217fddf146102ff578063ca15c87314610307578063d547741f1461031a578063e554d2341461032d578063efd460651461033e57600080fd5b80637b75083c1461026a57806384da92a71461027f5780639010d07c1461029257806391d14854146102bd57806395d89b41146102d057600080fd5b806333ea51a81161010a57806333ea51a8146101dd57806336568abe146101f0578063537f53121461020357806354fd4d5014610216578063611ed8cb146102305780636d70f7ae1461025757600080fd5b806301ffc9a71461014757806306fdde031461016f578063248a9ca31461018457806324d7806c146101b55780632f2ff15d146101c8575b600080fd5b61015a610155366004610bb6565b610351565b60405190151581526020015b60405180910390f35b61017761037c565b6040516101669190610c04565b6101a7610192366004610c37565b60009081526020819052604090206001015490565b604051908152602001610166565b61015a6101c3366004610c6c565b61040a565b6101db6101d6366004610c87565b610424565b005b6101db6101eb366004610c6c565b61044e565b6101db6101fe366004610c87565b6104e5565b6101db610211366004610cc9565b610563565b61021e600181565b60405160ff9091168152602001610166565b6101a77f9e62e2fe49176359be731211a93beb8a4b41d6d0345b62f64c4f4e7b56ba503281565b61015a610265366004610c6c565b610587565b6101a7600080516020610ff083398151915281565b6101db61028d366004610cc9565b6105b3565b6102a56102a0366004610d7a565b6105d7565b6040516001600160a01b039091168152602001610166565b61015a6102cb366004610c87565b6105f6565b61017761061f565b6101a77fb75d0c3e4b0e01fa592ef743acc55a0b7765ffd271595abd71aa99cbf3518c0781565b6101a7600081565b6101a7610315366004610c37565b61062c565b6101db610328366004610c87565b610643565b6004546001600160a01b03166102a5565b61015a61034c366004610c6c565b610668565b60006001600160e01b03198216635a05180f60e01b14806103765750610376826108db565b92915050565b6002805461038990610d9c565b80601f01602080910402602001604051908101604052809291908181526020018280546103b590610d9c565b80156104025780601f106103d757610100808354040283529160200191610402565b820191906000526020600020905b8154815290600101906020018083116103e557829003601f168201915b505050505081565b6000610376600080516020610ff0833981519152836105f6565b60008281526020819052604090206001015461043f81610910565b610449838361091d565b505050565b610466600080516020610ff0833981519152336105f6565b6104c35760405162461bcd60e51b8152602060048201526024808201527f4163636573734d61737465723a2055736572206973206e6f7420617574686f726044820152631a5e995960e21b60648201526084015b60405180910390fd5b600480546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811633146105555760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084016104ba565b61055f828261093f565b5050565b600080516020610ff083398151915261057b81610910565b60036104498382610e24565b60006103767f9e62e2fe49176359be731211a93beb8a4b41d6d0345b62f64c4f4e7b56ba5032836105f6565b600080516020610ff08339815191526105cb81610910565b60026104498382610e24565b60008281526001602052604081206105ef9083610961565b9392505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6003805461038990610d9c565b60008181526001602052604081206103769061096d565b60008281526020819052604090206001015461065e81610910565b610449838361093f565b60006103767fb75d0c3e4b0e01fa592ef743acc55a0b7765ffd271595abd71aa99cbf3518c07836105f6565b61069e82826105f6565b61055f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556106d43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b60006105ef836001600160a01b038416610977565b60606103766001600160a01b03831660145b6060600061074e836002610efa565b610759906002610f11565b67ffffffffffffffff81111561077157610771610cb3565b6040519080825280601f01601f19166020018201604052801561079b576020820181803683370190505b509050600360fc1b816000815181106107b6576107b6610f24565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106107e5576107e5610f24565b60200101906001600160f81b031916908160001a9053506000610809846002610efa565b610814906001610f11565b90505b600181111561088c576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061084857610848610f24565b1a60f81b82828151811061085e5761085e610f24565b60200101906001600160f81b031916908160001a90535060049490941c9361088581610f3a565b9050610817565b5083156105ef5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016104ba565b60006001600160e01b03198216637965db0b60e01b148061037657506301ffc9a760e01b6001600160e01b0319831614610376565b61091a81336109c6565b50565b6109278282610694565b60008281526001602052604090206104499082610718565b6109498282610a1f565b60008281526001602052604090206104499082610a84565b60006105ef8383610a99565b6000610376825490565b60008181526001830160205260408120546109be57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610376565b506000610376565b6109d082826105f6565b61055f576109dd8161072d565b6109e883602061073f565b6040516020016109f9929190610f51565b60408051601f198184030181529082905262461bcd60e51b82526104ba91600401610c04565b610a2982826105f6565b1561055f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60006105ef836001600160a01b038416610ac3565b6000826000018281548110610ab057610ab0610f24565b9060005260206000200154905092915050565b60008181526001830160205260408120548015610bac576000610ae7600183610fc6565b8554909150600090610afb90600190610fc6565b9050818114610b60576000866000018281548110610b1b57610b1b610f24565b9060005260206000200154905080876000018481548110610b3e57610b3e610f24565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610b7157610b71610fd9565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610376565b6000915050610376565b600060208284031215610bc857600080fd5b81356001600160e01b0319811681146105ef57600080fd5b60005b83811015610bfb578181015183820152602001610be3565b50506000910152565b6020815260008251806020840152610c23816040850160208701610be0565b601f01601f19169190910160400192915050565b600060208284031215610c4957600080fd5b5035919050565b80356001600160a01b0381168114610c6757600080fd5b919050565b600060208284031215610c7e57600080fd5b6105ef82610c50565b60008060408385031215610c9a57600080fd5b82359150610caa60208401610c50565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610cdb57600080fd5b813567ffffffffffffffff80821115610cf357600080fd5b818401915084601f830112610d0757600080fd5b813581811115610d1957610d19610cb3565b604051601f8201601f19908116603f01168101908382118183101715610d4157610d41610cb3565b81604052828152876020848701011115610d5a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60008060408385031215610d8d57600080fd5b50508035926020909101359150565b600181811c90821680610db057607f821691505b602082108103610dd057634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561044957600081815260208120601f850160051c81016020861015610dfd5750805b601f850160051c820191505b81811015610e1c57828155600101610e09565b505050505050565b815167ffffffffffffffff811115610e3e57610e3e610cb3565b610e5281610e4c8454610d9c565b84610dd6565b602080601f831160018114610e875760008415610e6f5750858301515b600019600386901b1c1916600185901b178555610e1c565b600085815260208120601f198616915b82811015610eb657888601518255948401946001909101908401610e97565b5085821015610ed45787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b808202811582820484141761037657610376610ee4565b8082018082111561037657610376610ee4565b634e487b7160e01b600052603260045260246000fd5b600081610f4957610f49610ee4565b506000190190565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351610f89816017850160208801610be0565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351610fba816028840160208801610be0565b01602801949350505050565b8181038181111561037657610376610ee4565b634e487b7160e01b600052603160045260246000fdfe8f882e9b3b0c043c8507802fbb9a0ed808c8f0587361ab18424493e6841512a8a26469706673582212208f270800ce771534938de32c0d3373ffdd78d2eb754c09a2b201d4ff77357fb764736f6c63430008110033b75d0c3e4b0e01fa592ef743acc55a0b7765ffd271595abd71aa99cbf3518c078f882e9b3b0c043c8507802fbb9a0ed808c8f0587361ab18424493e6841512a89e62e2fe49176359be731211a93beb8a4b41d6d0345b62f64c4f4e7b56ba5032";

type AccessMasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AccessMasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AccessMaster__factory extends ContractFactory {
  constructor(...args: AccessMasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "AccessMaster";
  }

  deploy(
    storefrontAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AccessMaster> {
    return super.deploy(
      storefrontAdmin,
      overrides || {}
    ) as Promise<AccessMaster>;
  }
  getDeployTransaction(
    storefrontAdmin: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(storefrontAdmin, overrides || {});
  }
  attach(address: string): AccessMaster {
    return super.attach(address) as AccessMaster;
  }
  connect(signer: Signer): AccessMaster__factory {
    return super.connect(signer) as AccessMaster__factory;
  }
  static readonly contractName: "AccessMaster";
  public readonly contractName: "AccessMaster";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AccessMasterInterface {
    return new utils.Interface(_abi) as AccessMasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AccessMaster {
    return new Contract(address, _abi, signerOrProvider) as AccessMaster;
  }
}
